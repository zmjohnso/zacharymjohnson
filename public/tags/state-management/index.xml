<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>State Management - Tag - Zachary M. Johnson</title>
        <link>http://localhost:1313/tags/state-management/</link>
        <description>State Management - Tag - Zachary M. Johnson</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>zachary.business@tutanota.com (Zachary M. Johnson)</managingEditor>
            <webMaster>zachary.business@tutanota.com (Zachary M. Johnson)</webMaster><lastBuildDate>Thu, 27 Jun 2024 18:45:02 -0400</lastBuildDate><atom:link href="http://localhost:1313/tags/state-management/" rel="self" type="application/rss+xml" /><item>
    <title>Benefits of Lifting State to the URL</title>
    <link>http://localhost:1313/benefits-of-lifting-state-to-the-url/</link>
    <pubDate>Thu, 27 Jun 2024 18:45:02 -0400</pubDate>
    <author>Zachary M. Johnson</author>
    <guid>http://localhost:1313/benefits-of-lifting-state-to-the-url/</guid>
    <description><![CDATA[<p>I recently found myself needing to lift some parts of my application state into the URL.
I usually default to use some state management solution in my web projects, and I am
a huge fan of <a href="https://spin.atomicobject.com/zustand-alternative-redux/" target="_blank" rel="noopener noreffer ">Zustand</a>.
However, there comes a time when using this type of state management alone may
not provide all the desired functionality.</p>
<h2 id="why-lift-state">Why Lift State</h2>
<p>Normally, when using something like Redux, the global store lives in memory within
the JavaScript runtime of your application. This generally would work great, but what if
a user wanted to share part of their application state with another user running the
application on another computer? Or what if the same user simply wanted to share some
application state between different tabs in the same browser? If all your state
is stored in runtime memory, this isn&rsquo;t possible.</p>]]></description>
</item>
</channel>
</rss>
